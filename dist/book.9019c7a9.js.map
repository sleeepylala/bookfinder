{"mappings":"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","sources":["<anon>","src/js/book.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire28d3\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire28d3\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// Import delle risorse esterne\n\nvar $f1q41 = parcelRequire(\"f1q41\");\n\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\n\nvar $7gSKI = parcelRequire(\"7gSKI\");\nconst $a379b4732405e624$var$displayCategory = document.querySelector(\".category\");\nconst $a379b4732405e624$var$containerCards = document.querySelector(\".container-cards\");\nconst $a379b4732405e624$var$btnBack = document.querySelector(\".btn1\");\nconst $a379b4732405e624$var$btnNext = document.querySelector(\".btn2\");\n// Recupero i dati dal localStorage\nconst $a379b4732405e624$var$jsonData = JSON.parse(localStorage.getItem(\"jsonData\"));\nconst $a379b4732405e624$var$inputSubject = localStorage.getItem(\"inputSubject\");\nlet $a379b4732405e624$var$currentPage = 1;\nconst $a379b4732405e624$var$itemsPerPage = 12;\nlet $a379b4732405e624$var$arrayBooks = [];\n// Funzione per rendere il corpo della pagina visibile scorrendo in modo smooth\nfunction $a379b4732405e624$var$scrollToTop() {\n    document.body.scrollIntoView({\n        behavior: \"smooth\"\n    });\n}\n// Funzione per creare una card\nconst $a379b4732405e624$var$createCard = function(image, title, authors, key) {\n    const card = document.createElement(\"div\");\n    card.className = \"card-book\";\n    // Funzione per creare un elemento immagine\n    const createImageElement = ()=>{\n        const imgContainer = document.createElement(\"div\");\n        imgContainer.className = \"container-img-book\";\n        if (image) {\n            const img = document.createElement(\"img\");\n            img.src = `https://covers.openlibrary.org/b/id/${image}-L.jpg`;\n            img.alt = `Image of the book: ${title}`;\n            imgContainer.appendChild(img);\n        }\n        card.appendChild(imgContainer);\n    };\n    // Funzione per creare un elemento testo\n    const createTextElement = ()=>{\n        const textContainer = document.createElement(\"div\");\n        textContainer.className = \"container-text-book\";\n        const h1Title = document.createElement(\"h1\");\n        h1Title.innerText = title;\n        textContainer.appendChild(h1Title);\n        const h2Author = document.createElement(\"h2\");\n        h2Author.innerText = authors;\n        textContainer.appendChild(h2Author);\n        card.appendChild(textContainer);\n    };\n    // Funzione per creare un bottone di descrizione\n    const createDescriptionButton = ()=>{\n        const btnDescription = document.createElement(\"button\");\n        btnDescription.type = \"button\";\n        btnDescription.className = \"btn-description\";\n        btnDescription.innerText = \"description\";\n        btnDescription.onclick = ()=>{\n            const bookKey = `https://openlibrary.org${key}.json`;\n            (0, $fmRoT.default).get(bookKey).then((response)=>{\n                const data = response.data;\n                const description = data.description || \"Description is not available\";\n                const bookModal = $a379b4732405e624$var$createModal(data.title, description, authors);\n            }).catch((error)=>{\n                console.error(`Description not found: ${error}`);\n            });\n        };\n        card.appendChild(btnDescription);\n    };\n    createImageElement();\n    createTextElement();\n    createDescriptionButton();\n    return card;\n};\nconst $a379b4732405e624$var$createModal = function(title, description, authors) {\n    // Aggiungi la classe modal-open al corpo del documento\n    document.body.classList.add(\"modal-open\");\n    const modal = document.createElement(\"div\");\n    modal.className = \"modal\";\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n    const contentContainer = document.createElement(\"div\");\n    contentContainer.className = \"content-container\";\n    const h1TitleModal = document.createElement(\"h1\");\n    h1TitleModal.innerText = title;\n    modal.appendChild(h1TitleModal);\n    const h2AuthorModal = document.createElement(\"h2\");\n    h2AuthorModal.innerText = authors;\n    modal.appendChild(h2AuthorModal);\n    const descriptionModal = document.createElement(\"p\");\n    descriptionModal.innerText = typeof description === \"object\" ? description.value || \"Description is not available\" : description || \"Description is not available\";\n    descriptionModal.className = \"description\";\n    contentContainer.appendChild(descriptionModal);\n    const btnClose = document.createElement(\"button\");\n    btnClose.type = \"button\";\n    btnClose.className = \"btn-close\";\n    btnClose.innerText = \"Close\";\n    contentContainer.appendChild(btnClose);\n    modal.appendChild(contentContainer);\n    btnClose.onclick = ()=>{\n        // Rimuovi la classe modal-open quando la modale viene chiusa\n        document.body.classList.remove(\"modal-open\");\n        modal.style.display = \"none\";\n        overlay.remove();\n    };\n    document.body.appendChild(modal);\n    setTimeout(()=>{\n        modal.classList.add(\"show\");\n    }, 50);\n    modal.style.display = \"block\";\n};\n// Funzione per renderizzare le carte dei libri\nfunction $a379b4732405e624$var$renderBooks() {\n    const startIndex = ($a379b4732405e624$var$currentPage - 1) * $a379b4732405e624$var$itemsPerPage;\n    const endIndex = startIndex + $a379b4732405e624$var$itemsPerPage;\n    const booksToDisplay = (0, (/*@__PURE__*/$parcel$interopDefault($f1q41))).slice($a379b4732405e624$var$arrayBooks, startIndex, endIndex);\n    $a379b4732405e624$var$scrollToTop();\n    $a379b4732405e624$var$containerCards.innerHTML = \"\";\n    booksToDisplay.forEach((element)=>{\n        const { cover_id: cover_id, title: title, authors: authors, key: key } = element;\n        const bookCard = $a379b4732405e624$var$createCard(cover_id, title, authors[0].name, key);\n        $a379b4732405e624$var$containerCards.appendChild(bookCard);\n    });\n}\n// Funzione per creare la lista e i suoi elementi\nfunction $a379b4732405e624$var$createPaginationList(start, end) {\n    let paginationList = document.querySelector(\".pagination-list\");\n    for(let i = start; i <= end; i++){\n        let listItem = document.createElement(\"li\");\n        listItem.className = \"link\";\n        listItem.setAttribute(\"value\", i);\n        listItem.textContent = i;\n        paginationList.appendChild(listItem);\n    }\n}\n// Funzione per aggiornare la paginazione\nfunction $a379b4732405e624$var$updatePagination() {\n    const totalPages = Math.ceil($a379b4732405e624$var$arrayBooks.length / $a379b4732405e624$var$itemsPerPage);\n    const pagesToShow = 5;\n    // Calcolo dell'indice iniziale e finale delle pagine da mostrare\n    let startIndex = Math.max($a379b4732405e624$var$currentPage - Math.floor(pagesToShow / 2), 1);\n    let endIndex = Math.min(startIndex + pagesToShow - 1, totalPages);\n    if (endIndex - startIndex + 1 < pagesToShow) startIndex = Math.max(endIndex - pagesToShow + 1, 1);\n    let paginationList = document.querySelector(\".pagination-list\");\n    paginationList.innerHTML = \"\";\n    // Creazione delle nuove pagine\n    for(let i = startIndex; i <= endIndex; i++){\n        let listItem = document.createElement(\"li\");\n        listItem.className = \"link\";\n        listItem.setAttribute(\"value\", i);\n        listItem.textContent = i;\n        paginationList.appendChild(listItem);\n        if (i === $a379b4732405e624$var$currentPage) listItem.classList.add(\"active\");\n    }\n    $a379b4732405e624$var$btnBack.disabled = $a379b4732405e624$var$currentPage === 1;\n    $a379b4732405e624$var$btnNext.disabled = $a379b4732405e624$var$currentPage === totalPages;\n}\n// Funzione per caricare i libri\nfunction $a379b4732405e624$var$loadBooks() {\n    if ($a379b4732405e624$var$jsonData && $a379b4732405e624$var$inputSubject) {\n        $a379b4732405e624$var$displayCategory.innerHTML = `${$a379b4732405e624$var$inputSubject} books`;\n        $a379b4732405e624$var$arrayBooks = $a379b4732405e624$var$jsonData.works;\n        // Aggiungi la classe 'active' al primo link quando carichi i libri\n        const firstPageLink = document.querySelector(\".link\");\n        if (firstPageLink) firstPageLink.classList.add(\"active\");\n        $a379b4732405e624$var$renderBooks();\n        $a379b4732405e624$var$updatePagination();\n        $a379b4732405e624$var$scrollToTop();\n    }\n}\n// Funzione per gestire la pagina che è attualmente cliccata\nfunction $a379b4732405e624$var$handlePageLinkClick(event) {\n    console.log(\"click page\");\n    if (!event.target.classList.contains(\"active\")) {\n        document.querySelectorAll(\".link\").forEach((link)=>link.classList.remove(\"active\"));\n        event.target.classList.add(\"active\");\n        $a379b4732405e624$var$currentPage = parseInt(event.target.value);\n        const firstPageLink = document.querySelector(\".link\");\n        if (firstPageLink) firstPageLink.classList.add(\"active\");\n        $a379b4732405e624$var$renderBooks();\n        $a379b4732405e624$var$updatePagination();\n    }\n}\n// Funzione per renderizzare le cardbook\nfunction $a379b4732405e624$var$_renderCard() {\n    const startIndex = ($a379b4732405e624$var$currentPage - 1) * $a379b4732405e624$var$itemsPerPage;\n    const endIndex = startIndex + $a379b4732405e624$var$itemsPerPage;\n    const booksToDisplay = (0, (/*@__PURE__*/$parcel$interopDefault($f1q41))).slice($a379b4732405e624$var$arrayBooks, startIndex, endIndex);\n    $a379b4732405e624$var$scrollToTop();\n    $a379b4732405e624$var$containerCards.innerHTML = \"\";\n    booksToDisplay.forEach((element)=>{\n        const { cover_id: cover_id, title: title, authors: authors, key: key } = element;\n        const bookCard = $a379b4732405e624$var$createCard(cover_id, title, authors[0].name, key);\n        $a379b4732405e624$var$containerCards.appendChild(bookCard);\n    });\n}\n// Funzione per gestire il click sul pulsante \"Indietro\"\nfunction $a379b4732405e624$var$handleBackBtnClick() {\n    console.log(\"click bottone 1\");\n    if ($a379b4732405e624$var$currentPage > 1) {\n        $a379b4732405e624$var$currentPage--;\n        $a379b4732405e624$var$_renderCard();\n        $a379b4732405e624$var$updatePagination();\n    }\n}\n// Funzione per gestire il click sul pulsante \"Avanti\"\nfunction $a379b4732405e624$var$handleNextBtnClick() {\n    const totalPages = Math.ceil($a379b4732405e624$var$arrayBooks.length / $a379b4732405e624$var$itemsPerPage);\n    console.log(\"click bottone 2\");\n    if ($a379b4732405e624$var$currentPage < totalPages) {\n        $a379b4732405e624$var$currentPage++;\n        $a379b4732405e624$var$_renderCard();\n        $a379b4732405e624$var$updatePagination();\n    }\n}\n// Aggiungo gli eventi agli elementi del DOM una volta che la pagina è caricata\nwindow.addEventListener(\"load\", function() {\n    if ($a379b4732405e624$var$btnBack) $a379b4732405e624$var$btnBack.addEventListener(\"click\", $a379b4732405e624$var$handleBackBtnClick);\n    if ($a379b4732405e624$var$btnNext) $a379b4732405e624$var$btnNext.addEventListener(\"click\", $a379b4732405e624$var$handleNextBtnClick);\n    const btnHome = document.querySelector(\".btn-home\");\n    if (btnHome) btnHome.addEventListener(\"click\", function() {\n        localStorage.removeItem(\"jsonData\");\n        localStorage.removeItem(\"inputSubject\");\n        console.log(\"Dati rimossi dal Local Storage\");\n        window.location.href = \"/index.html\";\n    });\n    (0, $7gSKI.preventImageDrag)();\n    $a379b4732405e624$var$loadBooks();\n    document.querySelector(\".pagination-list\").addEventListener(\"click\", function(event) {\n        if (event.target.classList.contains(\"link\")) $a379b4732405e624$var$handlePageLinkClick(event);\n    });\n});\n\n\n//# sourceMappingURL=book.9019c7a9.js.map\n","// Import delle risorse esterne\nimport _ from \"lodash\";\nimport \"../scss/main.scss\";\nimport axios from \"axios\";\nimport { preventImageDrag } from \"./main.js\";\n\nconst displayCategory = document.querySelector(\".category\");\nconst containerCards = document.querySelector(\".container-cards\");\nconst btnBack = document.querySelector(\".btn1\");\nconst btnNext = document.querySelector(\".btn2\");\n\n// Recupero i dati dal localStorage\nconst jsonData = JSON.parse(localStorage.getItem(\"jsonData\"));\nconst inputSubject = localStorage.getItem(\"inputSubject\");\n\nlet currentPage = 1;\nconst itemsPerPage = 12;\nlet arrayBooks = [];\n\n// Funzione per rendere il corpo della pagina visibile scorrendo in modo smooth\nfunction scrollToTop() {\n  document.body.scrollIntoView({ behavior: \"smooth\" });\n}\n\n// Funzione per creare una card\nconst createCard = function (image, title, authors, key) {\n  const card = document.createElement(\"div\");\n  card.className = \"card-book\";\n\n  // Funzione per creare un elemento immagine\n  const createImageElement = () => {\n    const imgContainer = document.createElement(\"div\");\n    imgContainer.className = \"container-img-book\";\n\n    if (image) {\n      const img = document.createElement(\"img\");\n      img.src = `https://covers.openlibrary.org/b/id/${image}-L.jpg`;\n      img.alt = `Image of the book: ${title}`;\n      imgContainer.appendChild(img);\n    }\n\n    card.appendChild(imgContainer);\n  };\n\n  // Funzione per creare un elemento testo\n  const createTextElement = () => {\n    const textContainer = document.createElement(\"div\");\n    textContainer.className = \"container-text-book\";\n\n    const h1Title = document.createElement(\"h1\");\n    h1Title.innerText = title;\n    textContainer.appendChild(h1Title);\n\n    const h2Author = document.createElement(\"h2\");\n    h2Author.innerText = authors;\n    textContainer.appendChild(h2Author);\n\n    card.appendChild(textContainer);\n  };\n\n  // Funzione per creare un bottone di descrizione\n  const createDescriptionButton = () => {\n    const btnDescription = document.createElement(\"button\");\n    btnDescription.type = \"button\";\n    btnDescription.className = \"btn-description\";\n    btnDescription.innerText = \"description\";\n\n    btnDescription.onclick = () => {\n      const bookKey = `https://openlibrary.org${key}.json`;\n\n      axios\n        .get(bookKey)\n        .then((response) => {\n          const data = response.data;\n          const description =\n            data.description || \"Description is not available\";\n          const bookModal = createModal(data.title, description, authors);\n        })\n        .catch((error) => {\n          console.error(`Description not found: ${error}`);\n        });\n    };\n\n    card.appendChild(btnDescription);\n  };\n\n  createImageElement();\n  createTextElement();\n  createDescriptionButton();\n\n  return card;\n};\nconst createModal = function (title, description, authors) {\n  // Aggiungi la classe modal-open al corpo del documento\n  document.body.classList.add(\"modal-open\");\n\n  const modal = document.createElement(\"div\");\n  modal.className = \"modal\";\n  const overlay = document.createElement(\"div\");\n  overlay.className = \"overlay\";\n  document.body.appendChild(overlay);\n  const contentContainer = document.createElement(\"div\");\n  contentContainer.className = \"content-container\";\n\n  const h1TitleModal = document.createElement(\"h1\");\n  h1TitleModal.innerText = title;\n  modal.appendChild(h1TitleModal);\n\n  const h2AuthorModal = document.createElement(\"h2\");\n  h2AuthorModal.innerText = authors;\n  modal.appendChild(h2AuthorModal);\n\n  const descriptionModal = document.createElement(\"p\");\n  descriptionModal.innerText =\n    typeof description === \"object\"\n      ? description.value || \"Description is not available\"\n      : description || \"Description is not available\";\n  descriptionModal.className = \"description\";\n  contentContainer.appendChild(descriptionModal);\n\n  const btnClose = document.createElement(\"button\");\n  btnClose.type = \"button\";\n  btnClose.className = \"btn-close\";\n  btnClose.innerText = \"Close\";\n  contentContainer.appendChild(btnClose);\n  modal.appendChild(contentContainer);\n\n  btnClose.onclick = () => {\n    // Rimuovi la classe modal-open quando la modale viene chiusa\n    document.body.classList.remove(\"modal-open\");\n    modal.style.display = \"none\";\n    overlay.remove();\n  };\n\n  document.body.appendChild(modal);\n\n  setTimeout(() => {\n    modal.classList.add(\"show\");\n  }, 50);\n\n  modal.style.display = \"block\";\n};\n\n// Funzione per renderizzare le carte dei libri\nfunction renderBooks() {\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const booksToDisplay = _.slice(arrayBooks, startIndex, endIndex);\n\n  scrollToTop();\n  containerCards.innerHTML = \"\";\n\n  booksToDisplay.forEach((element) => {\n    const { cover_id, title, authors, key } = element;\n    const bookCard = createCard(cover_id, title, authors[0].name, key);\n    containerCards.appendChild(bookCard);\n  });\n}\n\n// Funzione per creare la lista e i suoi elementi\nfunction createPaginationList(start, end) {\n  let paginationList = document.querySelector(\".pagination-list\");\n\n  for (let i = start; i <= end; i++) {\n    let listItem = document.createElement(\"li\");\n    listItem.className = \"link\";\n    listItem.setAttribute(\"value\", i);\n    listItem.textContent = i;\n\n    paginationList.appendChild(listItem);\n  }\n}\n\n// Funzione per aggiornare la paginazione\nfunction updatePagination() {\n  const totalPages = Math.ceil(arrayBooks.length / itemsPerPage);\n\n  const pagesToShow = 5;\n\n  // Calcolo dell'indice iniziale e finale delle pagine da mostrare\n  let startIndex = Math.max(currentPage - Math.floor(pagesToShow / 2), 1);\n  let endIndex = Math.min(startIndex + pagesToShow - 1, totalPages);\n\n  if (endIndex - startIndex + 1 < pagesToShow) {\n    startIndex = Math.max(endIndex - pagesToShow + 1, 1);\n  }\n\n  let paginationList = document.querySelector(\".pagination-list\");\n  paginationList.innerHTML = \"\";\n\n  // Creazione delle nuove pagine\n  for (let i = startIndex; i <= endIndex; i++) {\n    let listItem = document.createElement(\"li\");\n    listItem.className = \"link\";\n    listItem.setAttribute(\"value\", i);\n    listItem.textContent = i;\n\n    paginationList.appendChild(listItem);\n\n    if (i === currentPage) {\n      listItem.classList.add(\"active\");\n    }\n  }\n\n  btnBack.disabled = currentPage === 1;\n  btnNext.disabled = currentPage === totalPages;\n}\n\n// Funzione per caricare i libri\nfunction loadBooks() {\n  if (jsonData && inputSubject) {\n    displayCategory.innerHTML = `${inputSubject} books`;\n    arrayBooks = jsonData.works;\n    // Aggiungi la classe 'active' al primo link quando carichi i libri\n    const firstPageLink = document.querySelector(\".link\");\n    if (firstPageLink) {\n      firstPageLink.classList.add(\"active\");\n    }\n    renderBooks();\n\n    updatePagination();\n    scrollToTop();\n  }\n}\n// Funzione per gestire la pagina che è attualmente cliccata\nfunction handlePageLinkClick(event) {\n  console.log(\"click page\");\n\n  if (!event.target.classList.contains(\"active\")) {\n    document\n      .querySelectorAll(\".link\")\n      .forEach((link) => link.classList.remove(\"active\"));\n\n    event.target.classList.add(\"active\");\n\n    currentPage = parseInt(event.target.value);\n\n    const firstPageLink = document.querySelector(\".link\");\n    if (firstPageLink) {\n      firstPageLink.classList.add(\"active\");\n    }\n\n    renderBooks();\n    updatePagination();\n  }\n}\n\n// Funzione per renderizzare le cardbook\nfunction _renderCard() {\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const booksToDisplay = _.slice(arrayBooks, startIndex, endIndex);\n\n  scrollToTop();\n  containerCards.innerHTML = \"\";\n\n  booksToDisplay.forEach((element) => {\n    const { cover_id, title, authors, key } = element;\n    const bookCard = createCard(cover_id, title, authors[0].name, key);\n    containerCards.appendChild(bookCard);\n  });\n}\n\n// Funzione per gestire il click sul pulsante \"Indietro\"\nfunction handleBackBtnClick() {\n  console.log(\"click bottone 1\");\n  if (currentPage > 1) {\n    currentPage--;\n    _renderCard();\n    updatePagination();\n  }\n}\n\n// Funzione per gestire il click sul pulsante \"Avanti\"\nfunction handleNextBtnClick() {\n  const totalPages = Math.ceil(arrayBooks.length / itemsPerPage);\n  console.log(\"click bottone 2\");\n  if (currentPage < totalPages) {\n    currentPage++;\n    _renderCard();\n    updatePagination();\n  }\n}\n\n// Aggiungo gli eventi agli elementi del DOM una volta che la pagina è caricata\nwindow.addEventListener(\"load\", function () {\n  if (btnBack) {\n    btnBack.addEventListener(\"click\", handleBackBtnClick);\n  }\n\n  if (btnNext) {\n    btnNext.addEventListener(\"click\", handleNextBtnClick);\n  }\n\n  const btnHome = document.querySelector(\".btn-home\");\n  if (btnHome) {\n    btnHome.addEventListener(\"click\", function () {\n      localStorage.removeItem(\"jsonData\");\n      localStorage.removeItem(\"inputSubject\");\n      console.log(\"Dati rimossi dal Local Storage\");\n      window.location.href = \"/index.html\";\n    });\n  }\n\n  preventImageDrag();\n  loadBooks();\n\n  document\n    .querySelector(\".pagination-list\")\n    .addEventListener(\"click\", function (event) {\n      if (event.target.classList.contains(\"link\")) {\n        handlePageLinkClick(event);\n      }\n    });\n});\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$f1q41","$fmRoT","$7gSKI","$a379b4732405e624$var$displayCategory","document","querySelector","$a379b4732405e624$var$containerCards","$a379b4732405e624$var$btnBack","$a379b4732405e624$var$btnNext","$a379b4732405e624$var$jsonData","JSON","parse","localStorage","getItem","$a379b4732405e624$var$inputSubject","$a379b4732405e624$var$currentPage","$a379b4732405e624$var$arrayBooks","$a379b4732405e624$var$scrollToTop","body","scrollIntoView","behavior","$a379b4732405e624$var$createCard","image","title","authors","key","card","createElement","className","createImageElement","imgContainer","img","src","alt","appendChild","createTextElement","textContainer","h1Title","innerText","h2Author","createDescriptionButton","btnDescription","type","onclick","bookKey","get","then","response","data","description","$a379b4732405e624$var$createModal","catch","error","console","classList","add","modal","overlay","contentContainer","h1TitleModal","h2AuthorModal","descriptionModal","value","btnClose","remove","style","display","setTimeout","$a379b4732405e624$var$renderBooks","startIndex","booksToDisplay","slice","innerHTML","forEach","element","cover_id","bookCard","name","$a379b4732405e624$var$updatePagination","totalPages","Math","ceil","length","max","floor","pagesToShow","endIndex","min","paginationList","i","listItem","setAttribute","textContent","disabled","$a379b4732405e624$var$_renderCard","$a379b4732405e624$var$handleBackBtnClick","log","$a379b4732405e624$var$handleNextBtnClick","window","addEventListener","btnHome","removeItem","location","href","preventImageDrag","$a379b4732405e624$var$loadBooks","works","firstPageLink","event","target","contains","$a379b4732405e624$var$handlePageLinkClick","querySelectorAll","link","parseInt"],"version":3,"file":"book.9019c7a9.js.map"}